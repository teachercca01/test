//再利用可能なミックスイン定義 style

@use '_variables' as v;

@mixin all {
  box-sizing: border-box;
  letter-spacing: 0.1em;
  visibility: hidden;
  scroll-behavior: smooth;
}

@mixin body-text {
  color: v.$darkColor;
  font-family: v.$bodyFontFamily;
  font-size: clamp(1rem, 0.877rem + 0.52vw, 1.25rem);
}

@mixin fluid-img {
  max-width: 100%;
  height: auto;
}

@mixin desktop-min {
  @media (min-width: v.$breakpoint-desktop-min) {
    @content;
  }
}

@mixin mobile-max {
  @media (max-width: v.$breakpoint-mobile-max) {
    @content;
  }
}

@mixin mobile-middle {
  @media (max-width: v.$breakpoint-mobile-middle) {
    @content;
  }
}

@mixin required-label {
  position: relative;
  top: -0.1rem;
  left: -0.05rem;
  display: inline-block;
  padding: 0.25rem 0.5rem;
  margin-left: 0.25rem;
  background-color: v.$primaryColor;
  border-radius: 1.125rem;
  font-size: clamp(0.625rem, 0.441rem + 0.78vw, 1rem);
  color: v.$lightColor;
}

@mixin radio-button {
  $common-size: clamp(1rem, 0.755rem + 1.05vw, 1.5rem);
  position: relative;
  top: 0.25rem;
  font-size: clamp(0.875rem, 0.691rem + 0.78vw, 1.25rem);

  &:first-child {
    margin-right: 2.5rem;
  }

  input[type="radio"] {
    position: relative;
    width: $common-size;
    height: $common-size;
    margin-right: 0.3125rem;
    border-radius: 50%;
    appearance: none;
    cursor: pointer;

    &::before,
    &::after {
      content: "";
      position: absolute;
      top: 50%;
      display: block;
      border-radius: 50%;
      transform: translateY(-50%);
    }

    &::before {
      left: 0;
      width: $common-size;
      height: $common-size;
      background: v.$lightColor;
    }

    &::after {
      left: clamp(0.188rem, 0.126rem + 0.26vw, 0.313rem);
      width: clamp(0.625rem, 0.502rem + 0.52vw, 0.875rem);
      height: clamp(0.625rem, 0.502rem + 0.52vw, 0.875rem);
      background-color: v.$secondaryColorRGB;
      opacity: 0;
    }

    &:checked::after {
      opacity: 1;
    }
  }
}

@mixin text-input {
  width: 100%;
  padding: 0.5rem;
  background: v.$lightColor;
  text-align: left;

  &:focus:not(input[type="radio"]) {
    outline: 2px solid v.$secondaryColor;
  }
}

@mixin address-input {
  position: relative;
  top: -0.1rem;
  display: flex;
  align-items: baseline;

  [name="address1"] {
    width: 7.8125rem;
    margin-bottom: 0.5rem;
  }
}

@mixin submit-button {
  position: relative;
  display: inline-block;
  width: clamp(12.5rem, 9.436rem + 13.07vw, 18.75rem);
  height: clamp(3rem, 2.387rem + 2.61vw, 4.25rem);
  font-family: v.$headingFontFamily;
  font-size: clamp(1rem, 0.877rem + 0.52vw, 1.25rem);
  color: v.$lightColor;

  &::after {
    content: "";
    position: absolute;
    top: clamp(1.156rem, 0.827rem + 1.4vw, 1.5rem);
    left: clamp(11.094rem, 8.553rem + 10.84vw, 13.75rem);
    width: 0;
    height: 0;
    border: 0.375rem solid transparent;
    border-left-color: v.$lightColor;
  }

  input {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    background-color: v.$darkColor;
    text-align: center;
    cursor: pointer;
  }

  &:hover input {
    background-color: v.$secondaryColor;
  }

}